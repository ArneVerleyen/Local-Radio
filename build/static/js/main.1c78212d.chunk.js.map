{"version":3,"sources":["app/routes/index.js","app/config/index.js","app/services/api.service.js","app/services/auth.service.js","app/static/logos/Logo_LOCAL_wit.png","app/static/icons/bars-solid-white.svg","app/static/icons/close_white.svg","app/components/Partials/Header.js","app/components/Partials/Footer.js","app/static/images/IMG-3657.png","app/components/Partials/HeaderImage.js","app/static/icons/pin.svg","app/components/Searchbar/LocationSearchbar.js","app/static/icons/like_btn.svg","app/components/Songs/SongsList.js","app/components/Songs/UploadSong.js","app/components/Login/Login.js","app/components/Login/Register.js","app/components/Music/MusicSearchbar.js","app/components/Albums/AlbumList.js","app/components/Albums/AlbumDetail.js","app/components/Albums/AlbumUploadWithRel.js","app/components/Playlists/PlaylistList.js","app/components/Playlists/MakePlaylist.js","app/components/Playlists/PlaylistDetail.js","app/components/User/UserAlbumList.js","app/pages/HomePage.js","app/pages/SearchSongsPage.js","app/pages/ContactPage.js","app/pages/LoginPage.js","app/pages/RegisterPage.js","app/static/icons/upload_white.svg","app/static/icons/plus_white.svg","app/pages/Artist/AtristPage.js","app/pages/Artist/UploadSongPage.js","app/pages/Artist/UploadAlbumPage.js","app/pages/Artist/MakePlaylistPage.js","app/pages/Album/AlbumsPage.js","app/pages/Album/AlbumDetailPage.js","app/pages/Playlist/PlaylistsPage.js","app/pages/Playlist/PlaylistDetailPage.js","app/pages/User/UserAlbumPage.js","app/layout/PageLayout.js","app/utilities/RouteLayout.js","app/App.js","reportWebVitals.js","index.js"],"names":["HOME","LOGIN","REGISTER","CONTACT","ARTISTS","RADIO","SONGS","ALBUMS","ALBUMS_DETAIL","PLAYLISTS","PLAYLISTS_DETAIL","UPLOAD_SONG","MAKE_PLAYLIST","UPLOAD_ALBUM","USER_ALBUM","apiConfig","process","ApiContext","createContext","useApi","useContext","ApiProvider","children","BASE_URL","findAllSongs","query","a","url","console","log","fetch","response","json","findAllSongsNotPaged","findSong","id","storeMediaSong","token","songForm","options","method","headers","body","storeMediaPicture","pictureForm","storeSong","JSON","stringify","findAllAlbumsNotPaged","findAllAlbums","storeAlbum","findAlbum","findAllPlaylists","findPlaylist","storePlaylist","findUserLibraries","indexOf","queryParams","storeUserLibrary","userLib","findUserLibrary","Object","keys","map","key","encodeURIComponent","join","Provider","value","AuthContext","useAuth","AuthProvider","useState","parse","localStorage","getItem","Error","decoded","jwt","exp","Date","now","error","currentUser","setCurrentUser","signIn","username","password","mode","user","setItem","signup","logout","Header","open","setOpen","handleLogout","className","to","Routes","src","logo","alt","onClick","hamburger","close","Footer","HeaderImage","image","LocationSearchbar","lat","long","locate","setGeolocation","adress","locationForm","setLocationForm","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","locationLogo","onSubmit","ev","preventDefault","nodeOpenGeocoder","geocode","end","err","res","placeholder","name","type","onChange","target","SongList","amount","onReadmore","userID","songs","setSongs","setUserLib","songsPage","setSongsPage","authUser","user_id","initFetch","useCallback","fetchSongs","data","fetchLib","useEffect","checkLiked","song","acf","includes","unLikeSong","index","splice","postObj","fields","likeSong","push","picture","title","rendered","artist","controls","audio","source_url","like","UploadSong","history","useHistory","description","metaData","setmetaData","handleInputChange","uploadFiles","document","getElementById","coverInput","FormData","append","files","pictureData","audioInput","audioData","handleSubmit","rows","Login","setUsername","setPassword","Register","email","role","setBody","roleDOM","MusicSearchbar","AlbumList","onReadMore","albums","setAlbums","albumPage","setAlbumPage","fetchAlbums","checkLikedAlbum","album","unLikeAlbum","likeAlbum","cover","albumId","handleReadMore","AlbumDetail","useParams","setAlbum","nummersAlbum","setNummers","nummers","numArray","nummer","fetchAlbum","replace","AlbumUploadWithRel","coverUrl","setCoverUrl","file","albumForm","audioPath","filename","filenameSplice","filenameDone","status","artist_albums","userLibObj","multiple","PlaylistList","playlists","setPlaylists","playlistsPage","setPlaylistsPage","fetchPlaylists","playlist","playlistId","MakePlaylist","setPlaylist","checkAddedSongs","checkAddedAlbums","artist_playlists","playlistAdd","addSong","playlistRemove","removeSong","addAlbum","removeAlbum","PlaylistDetail","albumAr","songAr","albumsArray","songsArray","albumData","songData","fetchPlaylist","handleEventReadMore","UserAlbumList","HomePage","SearchSongsPage","ContactPage","LoginPage","RegisterPage","ArtistPage","upload","plus","UploadSongPage","UploadAlbumPage","MakePlaylistPage","AlbumsPage","AlbumDetailPage","PlaylistsPage","UserAlbumPage","PageLayout","RouteLayout","component","layout","rest","render","routeProps","React","createElement","renderMergedProps","App","exact","path","PlaylistDetailPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.1c78212d.chunk.js","sourcesContent":["export const HOME = '/';\n\nexport const LOGIN = '/login'\nexport const REGISTER = '/register';\n\nexport const ABOUT = '/about';\nexport const CONTACT = '/contact';\n\nexport const ARTISTS = '/artists';\n\nexport const RADIO = '/radio';\nexport const RADIO_DETAIL = '/radio/:id';\n\nexport const SONGS = '/songs';\nexport const SONGS_DETAIL = '/songs/:id';\n\nexport const ALBUMS = '/albums';\nexport const ALBUMS_DETAIL = '/albums/:id';\n\nexport const PLAYLISTS = '/playlists';\nexport const PLAYLISTS_DETAIL = '/playlists/:id';\n\nexport const EDIT_ARTIST_PROFILE = '/artistprofile/edit';\nexport const UPLOAD_SONG = '/songs/upload';\nexport const MAKE_PLAYLIST = '/create/playlist';\nexport const MAKE_RADIO = '/radio/broadcast';\nexport const UPLOAD_ALBUM   = '/create/albums';\n\nexport const USER_ALBUM   = '/user/albums';\nexport const USER_PLAYLISTS   = '/user/playlists';\nexport const USER_SONGS   = '/user/songs';\n\n\n\n\n","export const apiConfig = {\n    baseURL: process.env.REACT_APP_API_URL,\n};\n\n","import React, {useContext, createContext} from 'react';\nimport {apiConfig} from '../config';\n\nconst ApiContext = createContext();\nconst useApi = () => useContext(ApiContext);\n\nconst ApiProvider = ({children}) => {\n\n    const BASE_URL = `${apiConfig.baseURL}`;\n\n    /*\n     * SONGS\n     */\n\n    const findAllSongs = async (query) => {\n        let url = `${BASE_URL}/wp-json/wp/v2/nummers`;\n        if (query !== 0) {\n          url = url + `/?page=${query}`;\n        }\n        console.log(url);\n        const response = await fetch(url); \n        return response.json();\n    }\n\n    const findAllSongsNotPaged = async (query) => {\n        let url = `${BASE_URL}/wp-json/wp/v2/nummers`;\n\n        \n\n        const response = await fetch(url); \n        return response.json();\n    }\n\n    const findSong = async (id) => {\n        let url = `${BASE_URL}/wp-json/wp/v2/nummers/${id}`;\n        const response = await fetch(url);\n        return response.json();\n    } \n\n    const storeMediaSong = async (token, songForm) => {\n\n        const options = {\n          method: \"POST\",\n          headers: {\n            //'Accept': 'application/json',\n            //'Content-Type': 'audio/mpeg',\n            'Authorization': 'Bearer'+ token\n          },\n          body: songForm\n        };\n    \n        let url = `${BASE_URL}/wp-json/wp/v2/media`;\n        const response = await fetch(url, options);\n        \n        return response.json();\n    }\n\n\n    const storeMediaPicture = async (token, pictureForm) => {\n\n        const options = {\n          method: \"POST\",\n          headers: {\n            //'Accept': 'application/json',\n            //'Content-Type': 'audio/mpeg',\n            'Authorization': 'Bearer'+ token\n          },\n          body: pictureForm\n        };\n    \n        let url = `${BASE_URL}/wp-json/wp/v2/media`;\n        const response = await fetch(url, options);\n        \n        return response.json();\n    }\n\n    const storeSong = async (body, token) => {\n        const options = {\n          method: \"POST\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer'+ token\n          },\n          body: JSON.stringify(body)\n        };\n    \n        let url = `${BASE_URL}/wp-json/wp/v2/nummers`;\n        const response = await fetch(url, options);\n        return response.json();\n      }\n\n    /*\n     * ALBUMS\n     */\n    const findAllAlbumsNotPaged = async (query) => {\n        let url = `${BASE_URL}/wp-json/wp/v2/album`;\n\n        const response = await fetch(url);\n        return response.json();\n    }\n\n    const findAllAlbums = async (query) => {\n        let url = `${BASE_URL}/wp-json/wp/v2/album`;\n        if (query !== 0) {\n            url = url + `/?page=${query}`;\n          }\n        const response = await fetch(url);\n        return response.json();\n    }\n\n    const storeAlbum = async (body, token) => {\n\n        const options = {\n          method: \"POST\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer'+ token\n          },\n          body: JSON.stringify(body)\n        };\n    \n        let url = `${BASE_URL}/wp-json/wp/v2/album`;\n        const response = await fetch(url, options);\n        return response.json();\n    }\n\n    const findAlbum = async (id) => {\n        let url = `${BASE_URL}/wp-json/wp/v2/album/${id}`;\n        const response = await fetch(url);\n        return response.json();\n    } \n\n\n\n    /*\n     * PLAYLISTS\n     */\n\n    const findAllPlaylists = async (query) => {\n        let url = `${BASE_URL}/wp-json/wp/v2/playlists`;\n        if (query !== 0) {\n            url = url + `/?page=${query}`;\n        }\n        const response = await fetch(url);\n        return response.json();\n    }\n\n    const findPlaylist = async (id) => {\n        let url = `${BASE_URL}/wp-json/wp/v2/playlists/${id}`;\n        const response = await fetch(url);\n        return response.json();\n    } \n\n    const storePlaylist = async (body, token) => {\n\n        const options = {\n          method: \"POST\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer'+ token\n          },\n          body: JSON.stringify(body)\n        };\n    \n        let url = `${BASE_URL}/wp-json/wp/v2/playlists`;\n        const response = await fetch(url, options);\n        return response.json();\n    }\n\n\n    /*\n     * USERLIBRARY\n     */\n\n     // ?=include\n\n    const findUserLibraries = async (query = null) => {\n        let url = `${BASE_URL}/wp-json/wp/v2/user_library`;\n        if (query !== null) {\n          url += (url.indexOf('?') === -1 ? '?' : '&') + queryParams(query);\n        }\n        const response = await fetch(url);\n        return response.json();\n    }\n    \n    const storeUserLibrary = async (userLib, token, id) => {\n\n        const options = {\n          method: \"POST\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer'+ token\n          },\n          body: JSON.stringify(userLib)\n        };\n    \n        let url = `${BASE_URL}/wp-json/wp/v2/user_library/${id}`;\n        const response = await fetch(url, options);\n        return response.json();\n    }\n    const findUserLibrary = async (id) => {\n        let url = `${BASE_URL}/wp-json/wp/v2/user_library/?user_id=${id}`;\n        const response = await fetch(url);\n        return response.json();\n    } \n\n\n    const queryParams = (options) => {\n        return Object.keys(options)\n          .map(key => encodeURIComponent(key) + '=' + encodeURIComponent(options[key])).join('&');\n    }\n\n    return (\n        <ApiContext.Provider value={{\n            findAllSongs,\n            findAllAlbums,\n            findAllPlaylists,\n            findUserLibraries,\n            storeSong,\n            storeMediaSong,\n            storeMediaPicture,\n            storeAlbum,\n            findAlbum,\n            findSong,\n            storeUserLibrary,\n            findUserLibrary,\n            findPlaylist,\n            storePlaylist,\n            findAllAlbumsNotPaged,\n            findAllSongsNotPaged\n            }}>\n            {children}\n        </ApiContext.Provider>\n    )\n\n};\n\nexport  {\n    ApiProvider,\n    ApiContext,\n    useApi\n};\n","import React, {createContext, useContext, useState} from 'react';\nimport { apiConfig } from '../config';\nimport * as jwt from 'jsonwebtoken';\n\n\nconst AuthContext = createContext();\nconst useAuth = () => useContext(AuthContext);\n\nconst AuthProvider = ({children}) => {\n\n    const BASE_URL = `${apiConfig.baseURL}`;\n\n    const verifyUserFromLocalStorage = () => {\n        if (JSON.parse(localStorage.getItem('mern:authUser'))) {\n          try {\n            const token = JSON.parse(localStorage.getItem('mern:authUser')).token;\n            if (!token) {\n              throw new Error('Token is not present on localstorage!');\n            }\n            const decoded = jwt.verify(token, 'nmd');\n            if (!decoded) {\n              throw new Error('Couldn\\'t decode the token!');\n            }\n    \n            if (decoded.exp > Date.now()) {\n              throw new Error('Token is expired!')\n            }\n            return JSON.parse(localStorage.getItem('mern:authUser'));\n          } catch (error) {\n            return null;\n          }\n        }\n        return null;\n    }\n\n    const [currentUser, setCurrentUser] = useState(verifyUserFromLocalStorage);\n\n    const signIn = async (username, password) => {\n        const url =`${apiConfig.baseURL}/wp-json/jwt-auth/v1/token`;\n\n        \n\n        const body = {\n            username,\n            password\n        };\n\n        const headers = {\n            'Content-Type': 'application/json',\n            'Accept':'*'\n        };\n\n        const options = {\n            method: 'POST',\n            mode:'cors',\n            headers: headers,\n            body: JSON.stringify(body),\n        };\n\n        const response = await fetch(`${url}`, options);\n        const user = await response.json();\n    \n        localStorage.setItem('authUser', JSON.stringify(user));\n        setCurrentUser(user);\n    \n        return user;\n\n    }\n\n    const signup = async (body) => {\n        let url = `${apiConfig.baseURL}/wp-json/wp/v2/users/register`;\n\n        const headers = {\n            'Content-Type': 'application/json',\n            'Accept':'*'\n        };\n\n        const options = {\n            method: 'POST',\n            mode:'cors',\n            headers: headers,\n            body: JSON.stringify(body),\n        };\n        const response = await fetch(`${url}`, options);\n        const user = await response.json();\n    \n        localStorage.setItem('authUser', JSON.stringify(user));\n        setCurrentUser(user);\n    \n        return user;\n      }\n\n    const logout = async () => {\n        localStorage.setItem('authUser', null);\n        return true;\n    }\n\n    return (\n        <AuthContext.Provider value={{currentUser, signIn, logout, signup}} >\n            {children}\n        </AuthContext.Provider>\n    );\n}\n\nexport {\n    AuthContext,\n    AuthProvider,\n    useAuth\n}","export default __webpack_public_path__ + \"static/media/Logo_LOCAL_wit.349b1623.png\";","export default __webpack_public_path__ + \"static/media/bars-solid-white.9d1d1cc6.svg\";","export default __webpack_public_path__ + \"static/media/close_white.a44463c9.svg\";","import React, { useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport * as Routes from '../../routes';\nimport './header.scss';\nimport { useAuth } from '../../services';\n\n\n\nimport logo from '../../static/logos/Logo_LOCAL_wit.png';\nimport hamburger from '../../static/icons/bars-solid-white.svg';\nimport close from '../../static/icons/close_white.svg';\n\nconst Header = () => {\n\n    const [open, setOpen] = useState(false);\n    const toggleTrue = () => setOpen(true);\n    const toggleFalse = () => setOpen(false);\n    const { logout } = useAuth();\n\n    const handleLogout = async () =>{\n        logout();\n\t}\n\n    let user = JSON.parse(localStorage.getItem('authUser'));\n\n    return (\n        <div>\n            <div className='header-large-container'>\n                <div className='nav-container'>\n                    <Link to={Routes.HOME} >\n                        <img src={logo} alt='L.O.C.A.L. Radio'/>\n                    </Link>\n                    <Link to={Routes.HOME} >Home</Link>\n                    <Link to={Routes.ARTISTS} >Artists</Link>\n                    <Link to={Routes.CONTACT} >Contact</Link>\n                    <Link to={Routes.RADIO} >Radio</Link>\n                    <Link to={Routes.SONGS} >Music</Link>\n                    {user && <Link to={Routes.USER_ALBUM} >Library</Link> }\n                </div>\n                <div className='login-header-container'>\n                    {!user && <Link className='border' to={Routes.REGISTER} >REGISTER</Link>}\n                    {!user && <Link className='border' to={Routes.LOGIN} >LOGIN</Link>}\n                    {user && \n                    \n                        <button onClick={handleLogout} className='border' >LOGOUT</button>\n                    \n                    }\n                </div>\n            </div>\n            <div className='header-small-container'>\n                <div>\n                    <Link to={Routes.HOME} >\n                        <img src={logo} alt='L.O.C.A.L. Radio' />\n                    </Link>\n                </div>\n                <div>\n                    {!open  &&\n                        <button className='close-open-btn' onClick={toggleTrue}>\n                            <img src={hamburger} alt='click here' /> \n                        </button>\n                    }\n                    {open &&\n                        <div className=\"dropdown-container\" >\n                            <button className='close-open-btn' onClick={toggleFalse}>\n                                <img src={close} alt='click here' /> \n                            </button>\n                                <Link to={Routes.HOME} >Home</Link>\n                                <Link to={Routes.ARTISTS} >Artists</Link>\n                                <Link to={Routes.CONTACT} >Contact</Link>\n                                <Link to={Routes.RADIO} >Radio</Link>\n                                <Link to={Routes.SONGS} >Songs</Link>\n                                {user && <Link to={Routes.USER_ALBUM} >Library</Link> }\n                                {!user && <Link className='border' to={Routes.REGISTER} >REGISTER</Link>}\n                                {!user && <Link className='border' to={Routes.LOGIN} >LOGIN</Link>}\n                                {user &&\n                                    <button className='btn-logout' onClick={handleLogout}  >LOGOUT</button>\n                                }\n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as Routes from '../../routes';\nimport './footer.scss';\n\nimport logo from '../../static/logos/Logo_LOCAL_wit.png';\n\nconst Footer = () => {\n    return (\n        <div className='footer-container'>            \n            <Link to={Routes.HOME} >\n                <img src={logo} alt='L.O.C.A.L. Radio'/>\n            </Link>\n        </div>\n    );\n};\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/IMG-3657.2b545542.png\";","import React from 'react';\nimport './headerImage.scss';\nimport image from '../../static/images/IMG-3657.png';\n\nconst HeaderImage = () => {\n    return (\n        <div className='header-image-container'>\n            <img src={image} alt='a majestic header' />\n        </div>\n    );\n};\n\nexport default HeaderImage;","export default __webpack_public_path__ + \"static/media/pin.72e55ebe.svg\";","import React, {useState} from 'react';\nimport './locationSearchbar.scss';\n\n// eslint-disable-next-line no-unused-vars\nimport Geocode from 'node-open-geocoder';\n\nimport locationLogo from '../../static/icons/pin.svg';\nimport nodeOpenGeocoder from 'node-open-geocoder';\n\n\nconst LocationSearchbar = () => {\n\n\n    const [locate, setGeolocation] = useState(true);\n    const [locationForm, setLocationForm] = useState({\n        adress: ''\n    });\n\n    let lat;\n    let long;\n\n    const getLocation = (error) => {\n\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(function(position) {\n                lat = position.coords.latitude;\n                long = position.coords.longitude;\n                console.log(lat, long);\n            });\n        } \n        else \n        {\n            setGeolocation(!locate);\n            console.log(locate);\n        }\n    };\n\n    const handleSubmit = (ev) => {\n        ev.preventDefault();\n        // console.log(locationForm.adress);\n        nodeOpenGeocoder()\n            .geocode(locationForm.adress)\n            .end((err, res) => console.log(res));\n    };\n\n    const handleInputChange = (ev) => {\n        setLocationForm({\n            ...locationForm,\n            [ev.target.name]: ev.target.value\n        });\n    }\n\n    return (\n        <div className='locationSearchbar-container'>\n            <button onClick={getLocation} className='btn-location'>\n                <img src={locationLogo} alt='location' />\n                <h3>Search for L.O.C.A.L. artists</h3>\n            </button>\n            {!locate && <p>Geolocation is not available use the searchbar.</p>}\n            <div>\n                <form onSubmit={handleSubmit}>\n                    <input placeholder='street, city, country' name='adress' type='text' onChange={handleInputChange}/>\n                    <button type='submit' >SEARCH</button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default LocationSearchbar;","export default __webpack_public_path__ + \"static/media/like_btn.623f4a02.svg\";","import React, {useEffect, useState, Fragment, useCallback} from 'react';\nimport  {default as classnames} from 'classnames';\nimport { useApi } from '../../services';\n\nimport './songs.scss';\nimport like from '../../static/icons/like_btn.svg';\n\nconst SongList = ({children, amount, onReadmore, className, ...rest}) => {\n    const { findAllSongs } = useApi();\n    const { storeUserLibrary, findUserLibrary } = useApi();\n    const [songs, setSongs] = useState();\n    const [userLib, setUserLib] = useState();\n    const [songsPage, setSongsPage] = useState(0);\n    const authUser = JSON.parse(localStorage.getItem('authUser'));\n    let token;\n    let userID ;\n    if(authUser) {\n        token = authUser.token;\n        userID = authUser.user_id    \n    }\n    const initFetch = useCallback(\n        () => {\n            const fetchSongs = async () => {\n                const data = await findAllSongs(songsPage);\n                setSongs(data);\n            }\n            const fetchLib = async () => {\n                const body = await findUserLibrary(userID);\n                setUserLib(body[0]);\n            }\n\n            fetchSongs();\n            fetchLib();\n        }, [findAllSongs, findUserLibrary, userID, songsPage],\n    );\n\n\n\n    useEffect(() => {\n        initFetch();\n        \n        return () => {\n            // nothing to clean up\n        }\n    }, [initFetch],)\n\n    const checkLiked = (song) => {\n        const likes = userLib.acf.songs;\n\n        let liked = likes.includes(song.id);\n        return liked;\n    }\n\n\n    const unLikeSong = async (song) => {\n        const index = userLib.acf.songs.indexOf(song.id);\n\n        if (index !== -1) {\n            userLib.acf.songs.splice(index, 0);\n            const postObj = {\n                id: userLib.id,\n                fields:{\n                    songs: userLib.acf.songs.splice(index, 1),\n                }\n            };\n            const response = await storeUserLibrary (postObj ,token, userLib.id);\n            setUserLib(response);\n\n\n\n        }\n    }\n\n    const likeSong = async (song) => {\n        userLib.acf.songs.push(song.id);\n\n        const postObj = {\n\n            id: userLib.id,\n            fields: {\n\n                songs: userLib.acf.songs,\n\n            }\n        }\n\n\n        const response = await storeUserLibrary (postObj ,token, userLib.id);\n        setUserLib(response);\n\n    };\n\n    const handleLoadMore = () => {\n        let number = songsPage + 1;\n        setSongsPage(number)\n    }\n\n\n\n    return(\n        <div className=\"songs-container\">\n            {songs && songs.map((song, index) => (\n                <div className='song-container' key={index}>\n                    <div>\n                        {song.acf.picture &&\n                            <img className='cover' src={song.acf.picture} alt={song.title.rendered} />\n                        }\n                        {!song.acf.picture &&\n                            <div className='spacer'></div>\n                        }\n                    </div>\n                    <div className='song-text'>\n                        <div>\n                            Title: {song.title.rendered}\n                        </div>\n                        <div>\n                            {song.acf.artist &&\n                                <p>Artist: {song.acf.artist}</p>\n                            }\n                        </div>\n                        <div>\n                            <audio controls>\n                                <source src={song.acf.audio.source_url}/>\n                                <source type='audio/mpeg'/>\n                                browser doesn't support audio.\n                            </audio>\n                        </div>\n                        <div className='like-location-container'>\n                            {!!userLib ? \n                                <div>\n                                    {\n                                        checkLiked(song) &&\n                                        <button className='unlike' onClick={() => unLikeSong(song)}>\n                                            Unlike\n                                        </button>\n                                    }\n                                    {\n                                                                    \n                                        !checkLiked(song) &&\n                                        <button onClick={() => likeSong(song)}>\n                                            <img alt='like' className='' src={like} />\n                                        </button>\n                                    }\n                               \n                                </div>\n                                :<div></div>\n                            }\n                            {song.acf.latitude &&\n                                <div>\n                                    From:\n                                </div>\n                            }\n                            \n                        </div>\n                        \n                    </div>  \n                   \n                </div>  \n                \n            ))}\n           \n           <button id='load' onClick={handleLoadMore} >Load More</button>\n        </div>\n    );\n};\n\nexport default SongList;","import React,{useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport { useApi } from '../../services';\nimport * as Routes from '../../routes';\nimport './uploadSong.scss';\n\nconst UploadSong = () => {\n\n    let history = useHistory();\n\n    const [metaData, setmetaData] = useState({\n        title: '',\n        description:'',\n        artist:'',\n        user_id: ''\n    });\n\n\n    const { storeSong } = useApi()\n    const { storeMediaSong } = useApi();\n    const { storeMediaPicture } = useApi();\n\n\n    const handleInputChange = (ev) => {\n        setmetaData({\n          ...metaData,\n          [ev.target.name]: ev.target.value\n        });\n    }\n\n    const authUser = JSON.parse(localStorage.getItem('authUser'));\n    const token = authUser.token;\n\n    const uploadFiles = async () => {\n\n        let audioData\n        let pictureData;\n\n        if(document.getElementById(\"cover-input\") != null) {\n            const coverInput = document.getElementById(\"cover-input\");\n            const pictureForm = new FormData();\n            pictureForm.append(\"file\", coverInput.files[0]);\n            pictureData = await storeMediaPicture(token , pictureForm);\n        }\n\n        const audioInput = document.getElementById(\"audio-input\");\n\n        const songForm = new FormData();\n        songForm.append(\"file\", audioInput.files[0]);\n        audioData = await storeMediaSong(token, songForm)\n\n        let body = {\n            \"status\":\"publish\",\n            title: metaData.title,\n            fields:{\n                audio: audioData.source_url,\n                description: metaData.description,\n                picture: pictureData.source_url,\n                artist: metaData.artist,\n                user_id: authUser.user_id,\n            }\n        }\n\n        return body;\n    }\n\n    const handleSubmit =  async (ev) => {\n\n        ev.preventDefault();\n\n        let body = await uploadFiles();\n        console.log(body);\n        let response = await storeSong(body,  token);\n        console.log(response)\n        history.push(Routes.ARTISTS);\n\n    }\n\n    return(\n        <div className='UploadSong-container'>\n            <form onSubmit={handleSubmit} >\n                <div>\n                    <p>Upload file (.mp3)</p>\n                    <input id='audio-input' type='file' name='audiofile'   />\n                </div>\n                <div>\n                    <p>Upload cover</p>\n                    <input id='cover-input' type='file' name='coverfile'  />\n                </div>\n                <div>\n                    <p>Title:</p>\n                    <input className=\"input-text\"  type='text' name='title' placeholder='title' onChange={handleInputChange} />\n                </div>\n                <div>\n                    <p>Artist:</p>\n                    <input className=\"input-text\"  type='text' name='artist' placeholder='artist' onChange={handleInputChange} />\n                </div>\n                <div>\n                    <p>Description:</p>\n                    <textarea className=\"input-text\" rows='5' type='text' name='description' placeholder='description' onChange={handleInputChange}/>\n                </div>\n                <button type=\"submit\">Upload</button>\n            </form>\n        </div>\n    );\n}\n\nexport default UploadSong;","import React, {useState} from 'react';\nimport './login.scss';\nimport { useHistory } from 'react-router';\nimport {AuthProvider, AuthContext, useAuth} from '../../services';\nimport * as Routes from '../../routes';\n\nconst Login = () => {\n\n\n    const { signIn } = useAuth();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    let history = useHistory();\n\n    const handleSubmit = async (ev) => {\n        ev.preventDefault();\n        const user = await signIn(username, password);\n        if (user) {\n          history.push(Routes.HOME);\n        }\n    }\n\n    return (\n        <div className='login-component-container'>\n            <form onSubmit={(ev) => handleSubmit(ev)}>\n                <div>\n                    <label>\n                        Username:\n                    </label>\n                    <input type='text' name='username' placeholder='username' onChange={(ev) => setUsername(ev.target.value)} />\n                </div>\n                <div>\n                    <label>\n                        Password:\n                    </label>\n                    <input type='password' name='password' placeholder='password' onChange={(ev) => setPassword(ev.target.value)} />\n                </div>\n                <button type='submit'>Sign in</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;","import React, {useState} from 'react';\nimport './login.scss';\nimport { useHistory } from 'react-router';\nimport {useAuth} from '../../services';\nimport * as Routes from '../../routes';\n\nconst Register = () => {\n\n\n    const { signup } = useAuth();\n    const [body, setBody] = useState({\n        username: '',\n        password:'',\n        email:'',\n        role:[],\n    });\n\n    let history = useHistory();\n\n    const handleSubmit = async (ev) => {\n        ev.preventDefault();\n        const roleDOM = document.getElementById('role');\n        setBody({\n            ...body,\n            role: [roleDOM.value]\n        })\n\n        const user = await signup(body);\n        if (user) {\n          history.push(Routes.HOME);\n        }\n    }\n\n    const handleInputChange = (ev) => {\n        setBody({\n          ...body,\n          [ev.target.name]: ev.target.value\n        });\n      }\n    \n      const handleSelectChange = (ev) => {\n        setBody({\n          ...body,\n          [ev.target.name]: ev.target.options.value\n        });\n      }\n\n\n    return (\n        <div className='login-component-container'>\n            <form onSubmit={(ev) => handleSubmit(ev)}>\n                <div>\n                    <label>\n                        E-mail:\n                    </label>\n                    <input type='email' name='email' placeholder='email' onChange={handleInputChange} />\n                </div>\n                <div>\n                    <label>\n                        Username:\n                    </label>\n                    <input type='text' name='username' placeholder='username' onChange={handleInputChange} />\n                </div>\n                <div>\n                    <label>\n                        Password:\n                    </label>\n                    <input type='password' name='password' placeholder='password' onChange={handleInputChange} />\n                </div>\n                <div>\n                    <label>\n                        Are you an artist or just here to listen?\n                    </label>\n                    <select  name='role' id='role' value={body.role} onChange={handleSelectChange}>\n                        <option value={['artist']}>Artist</option>\n                        <option value={['luisteraar']}>Listner</option>\n                    </select>\n                </div>\n\n                <button type='submit'>Register</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Register;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './musicSearchbar.scss';\nimport * as Routes from '../../routes';\n\nconst MusicSearchbar = () => {\n    return (\n        <div className='MusicSearchbar-container'>\n            <div>\n                <Link to={Routes.SONGS} >Songs</Link>\n                <Link to={Routes.ALBUMS}>Albums</Link>\n                <Link to={Routes.PLAYLISTS}>Playlists</Link>\n            </div>\n            <div className='searchBar-music'>\n\n            </div>\n        </div>\n    );\n}\n\nexport default MusicSearchbar;","import React, {useEffect, useState, useCallback} from 'react';\nimport { useApi } from '../../services';\n\nimport './albumList.scss';\nimport like from '../../static/icons/like_btn.svg';\n\nconst AlbumList = ({children, amount, onReadMore, className, ...rest}) => {\n    const authUser = JSON.parse(localStorage.getItem('authUser'));\n    let token;\n    let userID ;\n    if(authUser) {\n        token = authUser.token;\n        userID = authUser.user_id    \n    }\n    const { findAllAlbums, findUserLibrary, storeUserLibrary } = useApi();\n    const [albums, setAlbums] = useState();\n    const [albumPage, setAlbumPage] = useState(0);\n    const [userLib, setUserLib] = useState({\n        acf: {\n            albums:[]\n        }\n    });\n    \n\n\n    const initFetch  =  useCallback(\n            () => {\n            const fetchAlbums = async () => {\n                const data = await findAllAlbums(albumPage)\n                setAlbums(data);\n            }\n            const fetchLib = async () => {\n                const body = await findUserLibrary(userID);\n                setUserLib(body[0]);\n            }\n            fetchLib();\n            fetchAlbums();\n        }, [findAllAlbums, findUserLibrary, userID, albumPage],\n    );\n\n    const handleReadMore = (ev, albumId) => {\n        ev.preventDefault();\n        if (typeof onReadMore === 'function') {\n                onReadMore(albumId);\n            }\n    };\n\n    useEffect(() => {\n\n        initFetch();\n        return () => {\n   \n        }\n    }, [initFetch])\n\n\n    const handleLoadMore = () => {\n        let number = albumPage + 1;\n        setAlbumPage(number)\n    }\n\n\n    const checkLikedAlbum = (album) => {\n        \n            const likes = userLib.acf.albums;\n\n            let liked = likes.includes(album.id);\n            return liked;\n        \n\n    }\n\n\n    const unLikeAlbum = async (album) => {\n        const index = userLib.acf.albums.indexOf(album.id);\n        console.log(index);\n        if (index !== -1) {\n            userLib.acf.albums.splice(index, 0);\n            console.log(userLib.acf.albums.splice(index, 1));\n            console.log(album.id);\n            const postObj = {\n                id: userLib.id,\n                fields:{\n                    albums: userLib.acf.albums.splice(index, 1),\n                }\n            };\n            const response = await storeUserLibrary (postObj ,token, userLib.id);\n            setUserLib(response);\n            console.log(response);\n\n\n        }\n    }\n\n    const likeAlbum = async (album) => {\n        console.log(userLib.acf);\n        userLib.acf.albums.push(album.id);\n        console.log(userLib);\n        const postObj = {\n            //title: userLib.title,\n            id: userLib.id,\n            fields: {\n\n                albums: userLib.acf.albums,\n\n            }\n        }\n        const response = await storeUserLibrary (postObj ,token, userLib.id);\n        setUserLib(response);\n        console.log(response);\n    };\n\n\n\n    return(\n        <div className=\"albums-container\">\n            {albums && albums.map((album, index) => (\n                <div className='album-container' key={index}>\n                    <div>\n                        {album.acf.cover &&\n                            <img className='cover' src={album.acf.cover} alt={album.title.rendered} />\n                        }\n                        {!album.acf.cover &&\n                            <div className='spacer'></div>\n                        }\n                    </div>\n                    <div className='album-text'>\n                        <div>\n                            Title: {album.title.rendered}\n                        </div>\n                        <div>\n                            {album.acf.artist &&\n                                <p>Artist: {album.acf.artist}</p>\n                            }\n                        </div>\n                        <button className='listen-to-album' onClick={ev => handleReadMore(ev, album.id)}>\n                            Listen to album\n                        </button>\n                        <div className='like-location-container'>\n                        {!!userLib ? \n                                <div>\n                                    {\n                                        checkLikedAlbum(album) &&\n                                        <button className='unlike' onClick={() => unLikeAlbum(album)}>\n                                            Unlike\n                                        </button>\n                                    }\n                                    {\n                                                                    \n                                        !checkLikedAlbum(album) &&\n                                        <button onClick={() => likeAlbum(album)}>\n                                            <img alt='like' className='' src={like} />\n                                        </button>\n                                    }\n\n                                </div>\n                                :<div></div>\n                            }\n                            {album.acf.latitude &&\n                                <div>\n                                    From:\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            ))}\n             <button id='load' onClick={handleLoadMore} >Load More</button>\n        </div>\n    );\n};\n\nexport default AlbumList;","import React, { useState, useEffect, Fragment, useCallback } from 'react';\n\nimport {useApi} from '../../services';\nimport {useParams} from 'react-router-dom';\n\n\nimport './albumDetail.scss';\n\nconst AlbumDetail = () => {\n\n    const { id } = useParams();\n\tconst { findAlbum, findSong } = useApi();\n    const [ album, setAlbum ] = useState();\n    const [ nummersAlbum, setNummers ] = useState([]);\n\n    const initFetch = useCallback (\n        () => {\n            let nummers;\n            const fetchAlbum = async () => {\n                const data = await findAlbum(id);\n                setAlbum(data);\n                nummers = data.acf.nummers;\n\n                let numArray = [];\n                for (const nummer of nummers) {\n                    const data = await findSong(nummer);\n\n                    numArray.push(data);\n                }\n                setNummers(numArray);\n            }\n\n            fetchAlbum();\n\n        }, [findAlbum, id, findSong],\n    );\n\n\tuseEffect(() =>{\n\n        initFetch()\n\t\treturn () => {\n\n\t\t}\n\t}, [initFetch]);\n\n    \n    const filterTitle = (title) => {\n        const titlename = title.replace(/[0-9]/g, '');\n        const titlenameSplice = titlename.replace(/.mp|-|;|#|@|/, \"\");\n        const titlenameSpliced = titlenameSplice.replace('#', \"\");\n        const titleFiltered = titlenameSpliced.replace('('|'&;'|'#'|';'|')','');\n        return titleFiltered;\n    }\n\n\n\n\n    return (\n        <Fragment>\n            \n            {!!album\n            ?   <div className='album-detail'>\n                    <div>\n                        {album.acf.cover &&\n                            <img className='cover' src={album.acf.cover} alt={album.title.rendered} />\n                        }\n                        {!album.acf.cover &&\n                            <div className='spacer'></div>\n                        }\n                    </div>\n                    <div className='album-text'>\n                        <div>\n                            Title: {album.title.rendered}\n                        </div>\n                        <div>\n                            {album.acf.artist &&\n                                <p>Artist: {album.acf.artist}</p>\n                            }\n                        </div>\n                        <div className='like-location-container'>\n\n                            {album.acf.latitude &&\n                                <div>\n                                    From:\n                                </div>\n                            }\n                        </div>\n                        <div>\n                            <p>Songs:</p>\n                            {!!nummersAlbum ? \n                            nummersAlbum.map((song, index) => (\n                                <div  key={index}>\n                                    <p>Title: {filterTitle(song.title.rendered)}</p>\n                                    <audio controls>\n                                        <source src={song.acf.audio.source_url}/>\n                                        <source type='audio/mpeg'/>\n                                        browser doesn't support audio.\n                                    </audio>\n                                </div>\n                            )):<div></div>\n                            }\n                        </div>\n                    </div>\n                </div>\n                :<div></div>}\n                \n        </Fragment>\n        \n    );\n}\n\nexport default AlbumDetail;","import React,{useState, useEffect, useCallback, useLayoutEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport { useApi } from '../../services';\nimport * as Routes from '../../routes';\nimport './albumUpload.scss';\n\n\n// content ACF omzetten in array van links voor nummers dan input naar multiple zetten api services aanpassen.\n// foreach voor elk liedje in array van input files om zo up te loaden\n\nconst AlbumUploadWithRel = () => {\n\n    let history = useHistory();\n\n    const [coverUrl, setCoverUrl] = useState();\n    const [userLib, setUserLib] = useState({\n\n    });\n    const [metaData, setmetaData] = useState({\n        title: '',\n        description:'',\n        artist:'',\n        user_id: ''\n    });\n\n    const [song, setSong] = useState();\n\n\n    const { storeAlbum, storeUserLibrary, findUserLibrary, storeSong } = useApi()\n    const { storeMediaSong } = useApi();\n    const { storeMediaPicture } = useApi();\n\n    const authUser = JSON.parse(localStorage.getItem('authUser'));\n    const token = authUser.token;\n    const userID = authUser.user_id;\n\n    const initFetch = useCallback(\n        () => {\n            const fetchLib = async () => {\n                const body = await findUserLibrary(userID);\n                setUserLib(body[0]);\n            }\n            fetchLib();\n        },[findUserLibrary, userID]\n    );\n\n    useEffect(() => {\n        initFetch();\n\n        return () => {\n\n        }\n    }, [initFetch]);\n\n    const handleInputChange = (ev) => {\n        setmetaData({\n          ...metaData,\n          [ev.target.name]: ev.target.value\n        });\n    }\n\n\n\n    const uploadFiles = async () => {\n\n        let audioData = []; \n        let pictureData;\n\n        if(document.getElementById(\"cover-input\") != null) {\n            const coverInput = document.getElementById(\"cover-input\");\n            const pictureForm = new FormData();\n            pictureForm.append(\"file\", coverInput.files[0]);\n            pictureData = await storeMediaPicture(token , pictureForm);\n            setCoverUrl(pictureData);\n        }\n\n        const audioInput = document.getElementById(\"audio-input\");\n\n        const files = audioInput.files;\n        for (const file of files) {\n            console.log(file.name);\n            const albumForm = new FormData();\n            albumForm.append(\"file\", file);\n            let audioPath = await storeMediaSong(token, albumForm);\n            \n            const filename = file.name.replace(/[0-9]/g, '');\n            const filenameSplice = filename.replace(\".mp\", \"\");\n            const filenameDone = filenameSplice.replace(\"-\",\"\");\n            //console.log(filenameDone);\n            const body = {\n                status:'publish',\n                title: filenameDone,\n                fields:{\n                    user_id: userID,\n                    audio: audioPath,\n                    description: metaData.description,\n                    cover: coverUrl,\n                }\n            }\n            \n\n            const data = await storeSong(body, token);\n            audioData.push(data.id);\n\n        }\n\n\n        let body = {\n            \"status\":\"publish\",\n            title: metaData.title,\n            fields:{\n                nummers: audioData,\n                description: metaData.description,\n                cover: pictureData.source_url,\n                artist: metaData.artist,\n                user_id: authUser.user_id,\n            }\n        }\n\n        return body;\n    }\n    \n\n    const handleSubmit =  async (ev) => {\n\n        ev.preventDefault();\n\n        let body = await uploadFiles();\n        \n        let response = await storeAlbum(body,  token);\n        console.log(response);\n        console.log(userLib);\n        if (userLib.acf.artist_albums === \"\") {\n            userLib.acf.artist_albums[0] = response.id\n        } else {\n            userLib.acf.artist_albums.push(response.id);\n\n        }\n        \n        const userLibObj ={\n            id: userLib.id,\n            fields:{\n                artist_albums: userLib.acf.artist_albums,\n            }\n        }\n        const res = await storeUserLibrary(userLibObj, token, userLib.id);\n        console.log(res);\n        history.push(Routes.ARTISTS);\n        \n        \n    }\n\n    return(\n        <div className='UploadAlbum-container'>\n            <form onSubmit={handleSubmit} >\n                <h3>Upload Album</h3>\n                <div>\n                    <p>Upload song files (.mp3)</p>\n                    <input id='audio-input'  type='file' name='audiofile'  multiple/>\n                </div>\n                <div>\n                    <p>Upload album cover</p>\n                    <input id='cover-input' type='file' name='coverfile'  />\n                </div>\n                <div>\n                    <p>Album title:</p>\n                    <input className=\"input-text\"  type='text' name='title' placeholder='title' onChange={handleInputChange} />\n                </div>\n                <div>\n                    <p>Artist:</p>\n                    <input className=\"input-text\"  type='text' name='artist' placeholder='artist' onChange={handleInputChange} />\n                </div>\n                <div>\n                    <p>Album description:</p>\n                    <textarea className=\"input-text\" rows='5' type='text' name='description' placeholder='description' onChange={handleInputChange}/>\n                </div>\n                <button type=\"submit\">Upload</button>\n            </form>\n        </div>\n    );\n}\n\nexport default AlbumUploadWithRel;","import React, {useEffect, useState, useCallback} from 'react';\nimport { useApi } from '../../services';\n\nimport './playlistList.scss';\nimport like from '../../static/icons/like_btn.svg';\n\nconst PlaylistList = ({children, amount, onReadMore, className, ...rest}) => {\n    const { findAllPlaylists } = useApi();\n    const [playlists, setPlaylists] = useState();\n    const [playlistsPage, setPlaylistsPage] = useState(0);\n    \n    const initFetch = useCallback(\n        () => {\n            const fetchPlaylists = async () => {\n                const data = await findAllPlaylists(playlistsPage);\n                setPlaylists(data);\n            }\n            fetchPlaylists();\n        }, [findAllPlaylists, playlistsPage],\n    );\n\n    const handleReadMore = (ev, playlistId) => {\n        ev.preventDefault();\n        if (typeof onReadMore === 'function') {\n            onReadMore(playlistId);\n        }\n    };\n\n    useEffect(() => {\n        initFetch();\n        return () => {\n            // nothing to clean up\n        }\n    }, [initFetch])\n\n    console.log(playlists);\n\n\n    const handleLoadMore = () => {\n        let number = playlistsPage + 1;\n        setPlaylistsPage(number)\n    }\n    return(\n        <div className=\"playlists-container\">\n            {playlists && playlists.map((playlist, index) => (\n                <div className='playlist-container' key={index}>\n                    <div className='playlist-text'>\n                        <div>\n                            Title: {playlist.title.rendered}\n                        </div>\n                        <div>\n                            {playlist.acf.description &&\n                                <p>Description: {playlist.acf.description}</p>\n                            }\n                        </div>\n                        <div>\n                            <button className='listen-to-playlist' onClick={(ev) => handleReadMore(ev, playlist.id)} >\n                                Listen to playlist\n                            </button>\n                        </div>\n                        <div className='like-location-container'>\n                            <button>\n                                <img alt='like' className='' src={like} />\n                            </button>\n                            {playlist.acf.latitude &&\n                                <div>\n                                    From:\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            ))}\n             <button id='load' onClick={handleLoadMore} >Load More</button>\n        </div>\n    );\n};\n\nexport default PlaylistList;","import React, {useState, useCallback, useEffect} from 'react';\nimport './makePlaylist.scss';\nimport {useHistory} from 'react-router-dom';\nimport {useApi} from '../../services';\nimport * as Routes from '../../routes';\n\n\nconst MakePlaylist = () => {\n\n    const history = useHistory();\n    const authUser = JSON.parse(localStorage.getItem('authUser'));\n    const token = authUser.token;\n    const userID = authUser.user_id;\n\n    const {storePlaylist, findAllSongs,findAllAlbumsNotPaged,findAllSongsNotPaged, findAllAlbums, findUserLibrary, storeUserLibrary} = useApi();\n    const [songs, setSongs] = useState();\n    const [albums, setAlbums] = useState(null);\n    const [playlist, setPlaylist] = useState({\n        title: '',\n        status:'publish',\n        fields:{\n            albums:[],\n            songs:[],\n            description:'',\n            user_id: userID,\n        }\n    });\n\n    const [userLib, setUserLib] = useState();\n\n\n\n    const initFetch = useCallback(\n        () => {\n            const fetchSongs = async () => {\n                const data = await findAllSongsNotPaged();\n                setSongs(data);\n            }\n            const fetchAlbums = async () => {\n                const data = await findAllAlbumsNotPaged();\n                setAlbums(data);\n            }\n\n            const fetchLib = async () => {\n                const body = await findUserLibrary(userID);\n                setUserLib(body[0]);\n            }\n            fetchAlbums();\n            fetchSongs();\n            fetchLib();\n        }, [findAllSongsNotPaged, findUserLibrary, userID, findAllAlbumsNotPaged],\n    );\n\n    useEffect(() => {\n        initFetch();\n        \n        return () => {\n            // nothing to clean up\n        }\n    }, [initFetch],)\n\n    const checkAddedSongs = (song) => {\n        const added = playlist.fields.songs;\n\n        let add = added.includes(song.id);\n        return add;\n    }\n\n    const checkAddedAlbums = (album) => {\n        const added = playlist.fields.albums;\n\n        let add = added.includes(album.id);\n\n        return add;\n    }\n\n    const addSong = (song) => {\n        playlist.fields.songs.push(song.id);\n        const playlistAdd = {\n            title: playlist.title,\n            status: playlist.status,\n            fields: {\n\n                songs: playlist.fields.songs,\n                albums: playlist.fields.albums,\n                description: playlist.description,\n                user_id: playlist.user_id,\n            }\n        }\n\n        setPlaylist(playlistAdd);\n    };\n\n    const removeAlbum = (album) => {\n        const index = playlist.fields.songs.indexOf(album.id);\n        if (index !== -1) {\n            playlist.fields.albums.splice(index, 1);\n            const playlistRemove = {\n                title: playlist.title,\n                status: playlist.status,\n                fields: {\n    \n                    songs: playlist.fields.songs,\n                    albums: playlist.fields.albums,\n                    description: playlist.description,\n                    user_id: playlist.user_id,\n                }\n            }\n            setPlaylist(playlistRemove);\n        }\n    }\n\n    const removeSong = (song) => {\n        const index = playlist.fields.songs.indexOf(song.id);\n        if (index !== -1) {\n            playlist.fields.songs.splice(index, 1);\n            const playlistRemove = {\n                title: playlist.title,\n                status: playlist.status,\n                fields: {\n    \n                    songs: playlist.fields.songs,\n                    albums: playlist.fields.albums,\n                    description: playlist.description,\n                    user_id: playlist.user_id,\n                }\n            }\n            setPlaylist(playlistRemove);\n        }\n    }\n\n    const addAlbum = (album) => {\n        playlist.fields.albums.push(album.id);\n        const playlistAdd = {\n            title: playlist.title,\n            status: playlist.status,\n            \n            fields: {\n\n                songs: playlist.fields.songs,\n                albums:  playlist.fields.albums,\n                description: playlist.description,\n                user_id: playlist.user_id,\n\n            }\n        }\n        setPlaylist(playlistAdd);\n    };\n\n\n\n    const handleInputChange = (ev) => {\n        setPlaylist({\n          ...playlist,\n          [ev.target.name]: ev.target.value\n        });\n    }\n\n    const handleSubmit = async (ev) => {\n        ev.preventDefault();\n        const response = await storePlaylist(playlist, token);\n        userLib.acf.artist_playlists.push(response.id);\n        const userLibObj = {\n            id: userLib.id,\n            fields:{\n                artist_playlists: userLib.acf.artist_playlists,\n            }\n        }\n\n        const res = await storeUserLibrary(userLibObj, token, userLib.id);\n        console.log(res);\n        history.push(Routes.ARTISTS);\n    }\n\n\n    return (\n        <div className='MakePlaylist-container'>\n            <h2>Make playlist</h2>\n            <form onSubmit={(ev) => handleSubmit(ev)}>\n                <div>\n                    <p>Title</p>\n                    <input onChange={handleInputChange} type='text' name='title' placeholder='title' />\n                </div>\n                <div>\n                    <p>Description</p>\n                    <textarea onChange={handleInputChange} rows='8' type='text' name='description' placeholder='description' />\n                </div>\n                <button type='submit' >Make playlist</button>\n            </form>\n\n            <div>\n            <h3>Songs</h3>\n                {\n                    songs && songs.map((song, index) =>(\n                        <div className='playlist-flex' key={index}>\n                            <div>\n                                <div>\n                                    Title: {song.title.rendered}\n                                </div>\n                                <div>\n                                {song.acf.artist &&\n                                    <p className='p-border' >Artist: {song.acf.artist}</p>\n                                }\n                                </div>\n                            </div>\n                            {!!playlist ?\n\n                            <div>\n                            {\n                                !checkAddedSongs(song) &&\n                                <button onClick={() => addSong(song)} >Add to playlist</button>\n                            }\n                            {\n                                checkAddedSongs(song) &&\n                                <button onClick={() => removeSong(song)} >Remove from playlist</button>\n                            }\n                            </div>\n                            :<div></div>\n                            }\n                            \n                        </div>\n                    ))\n                }\n            </div>\n            <div>\n            <h3>Albums</h3>\n                {!!albums ?\n                    <div>\n                    {\n                        albums && albums.map((album, index) =>(\n                            <div className='playlist-flex' key={index}>\n                                <div>\n                                    <div>\n                                        Album title: {album.title.rendered}\n                                    </div>\n                                    <div>\n                                    {album.acf.artist &&\n                                        <p className='p-border' >Album artist: {album.acf.artist}</p>\n                                    }\n                                    </div>\n                                </div>\n                                {!!playlist ?\n\n                                    <div>\n                                    {\n                                        !checkAddedAlbums(album) &&\n                                        <button onClick={() => addAlbum(album)} >Add to playlist</button>\n                                    }\n                                    {\n                                        checkAddedAlbums(album) &&\n                                        <button onClick={() => removeAlbum(album)} >Remove from playlist</button>\n                                    }\n                                    </div>\n                                    :<div></div>\n                                }\n                            </div>\n                        ))\n                    }\n                    </div>\n                :<div></div> }\n            </div>\n        </div>\n    );\n}\n\nexport default MakePlaylist;","import React, { useState, useEffect, Fragment, useCallback } from 'react';\n\nimport {useApi} from '../../services';\nimport {useParams, useHistory} from 'react-router-dom';\nimport like from '../../static/icons/like_btn.svg';\nimport * as Routes from '../../routes';\nimport './playlistDetail.scss';\n\nconst PlaylistDetail = () => {\n\n    const { id } = useParams();\n\tconst { findPlaylist, findSong, findAlbum } = useApi();\n    const [ playlist, setPlaylist ] = useState();\n    const [ songs, setSongs ] = useState();\n    const [ albums, setAlbums ] = useState();\n\n\n    const initFetch = useCallback (\n        () => {\n\n            const fetchPlaylist = async () => {\n                const data = await findPlaylist(id);\n                setPlaylist(data);\n                let albumAr = data.acf.albums;\n                let songAr = data.acf.songs;\n                let albumsArray=[];\n                let songsArray=[];\n                for (const album of albumAr) {\n                    const albumData = await findAlbum(album);\n                    albumsArray.push(albumData);\n\n                }\n                for (const song of songAr) {\n                    const songData = await findSong(song);\n                    songsArray.push(songData);\n                }\n\n                setAlbums(albumsArray);\n                setSongs(songsArray);\n\n            }\n\n            //fetchAlbums();\n            fetchPlaylist();\n        }, [findPlaylist, id, findSong, findAlbum]\n    );\n    console.log(songs);\n    console.log(albums);\n\tuseEffect(() =>{\n\n        initFetch()\n\n\t\treturn () => {\n\n\t\t}\n\t}, [initFetch]);\n    const history = useHistory();\n\tconst handleEventReadMore = (albumId) => {\n\t\thistory.push(`${Routes.ALBUMS_DETAIL.replace(':id',albumId)}`);\n    };\n    \n    const handleReadMore = (ev, albumId) => {\n        ev.preventDefault();\n        if (typeof onReadMore === 'function') {\n                handleEventReadMore(albumId);\n            }\n    };\n\n    return (\n        <Fragment>\n            {!!playlist\n            ?   <div className='playlist-detail'>\n                    <div>\n                        {playlist.acf.cover &&\n                            <img className='cover' src={playlist.acf.cover} alt={playlist.title.rendered} />\n                        }\n                        {!playlist.acf.cover &&\n                            <div className='spacer'></div>\n                        }\n                    </div>\n                    <div className='playlist-text'>\n                        <div>\n                            Title: {playlist.title.rendered}\n                        </div>\n                        <div>\n                            {playlist.acf.artist &&\n                                <p>Artist: {playlist.acf.artist}</p>\n                            }\n                        </div>\n                        <div className='like-location-container'>\n\n                            <button>\n                                <img alt='like' className='' src={like} />\n                            </button>\n                            {playlist.acf.latitude &&\n                                <div>\n                                    From:\n                                </div>\n                            }\n                        </div>\n                        <div>\n                            <p>Songs:</p>\n                            {!!songs ? \n                            songs.map((song, index) => (\n                                <audio controls key={index}>\n                                    <source src={song}/>\n                                    <source type='audio/mpeg'/>\n                                    browser doesn't support audio.\n                                </audio>\n                            )):<div></div>\n                            }\n                        </div>\n                    </div>\n\n                </div>\n                \n                :<div></div>}\n                            <div className=\"albums-container\">\n            {albums && albums.map((album, index) => (\n                <div className='album-container' key={index}>\n                    <div>\n                        {album.acf.cover &&\n                            <img className='cover' src={album.acf.cover} alt={album.title.rendered} />\n                        }\n                        {!album.acf.cover &&\n                            <div className='spacer'></div>\n                        }\n                    </div>\n                    <div className='album-text'>\n                        <div>\n                            Title: {album.title.rendered}\n                        </div>\n                        <div>\n                            {album.acf.artist &&\n                                <p>Artist: {album.acf.artist}</p>\n                            }\n                        </div>\n                        <button className='listen-to-album' onClick={ev => handleReadMore(ev, album.id)}>\n                            Listen to album\n                        </button>\n                        <div className='like-location-container'>\n                            {album.acf.latitude &&\n                                <div>\n                                    From:\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </div>\n        </Fragment>\n    );\n}\n\nexport default PlaylistDetail;","import React, {useEffect, useState, useCallback} from 'react';\nimport { useApi } from '../../services';\n\nimport './albumList.scss';\nimport like from '../../static/icons/like_btn.svg';\n\nconst UserAlbumList = ({children, amount, onReadMore, className, ...rest}) => {\n    const { findAllAlbums, findUserLibrary, storeUserLibrary } = useApi();\n    const [albums, setAlbums] = useState();\n    const [albumPage, setAlbumPage] = useState(0);\n    const [userLib, setUserLib] = useState({\n        acf: {\n            albums:[]\n        }\n    });\n    \n    const authUser = JSON.parse(localStorage.getItem('authUser'));\n    const token = authUser.token;\n    const userID = authUser.user_id;\n\n    const initFetch  =  useCallback(\n            () => {\n            const fetchLib = async () => {\n                const body = await findUserLibrary(userID);\n                setUserLib(body[0]);\n                \n            }\n            fetchLib();\n            const fetchAlbums = async () => {\n                const data = await findAllAlbums(albumPage)\n                setAlbums(data);\n            }\n\n            fetchAlbums();\n        }, [findAllAlbums, findUserLibrary, userID, albumPage],\n    );\n    console.log(userLib);\n\n    const handleReadMore = (ev, albumId) => {\n        ev.preventDefault();\n        if (typeof onReadMore === 'function') {\n                onReadMore(albumId);\n            }\n    };\n\n    useEffect(() => {\n\n        initFetch();\n        return () => {\n   \n        }\n    }, [initFetch])\n\n\n    const handleLoadMore = () => {\n        let number = albumPage + 1;\n        setAlbumPage(number)\n    }\n\n\n    const checkLikedAlbum = (album) => {\n        \n            const likes = userLib.acf.albums;\n\n            let liked = likes.includes(album.id);\n            return liked;\n        \n\n    }\n\n\n    const unLikeAlbum = async (album) => {\n        const index = userLib.acf.albums.indexOf(album.id);\n        console.log(index);\n        if (index !== -1) {\n            userLib.acf.albums.splice(index, 0);\n            console.log(userLib.acf.albums.splice(index, 1));\n            console.log(album.id);\n            const postObj = {\n                id: userLib.id,\n                fields:{\n                    albums: userLib.acf.albums.splice(index, 1),\n                }\n            };\n            const response = await storeUserLibrary (postObj ,token, userLib.id);\n            setUserLib(response);\n            console.log(response);\n\n\n        }\n    }\n\n    const likeAlbum = async (album) => {\n        console.log(userLib.acf);\n        userLib.acf.albums.push(album.id);\n        console.log(userLib);\n        const postObj = {\n            //title: userLib.title,\n            id: userLib.id,\n            fields: {\n\n                albums: userLib.acf.albums,\n\n            }\n        }\n        const response = await storeUserLibrary (postObj ,token, userLib.id);\n        setUserLib(response);\n        console.log(response);\n    };\n\n\n\n    return(\n        <div className=\"albums-container\">\n            {albums && albums.map((album, index) => (\n                <div className='album-container' key={index}>\n                    <div>\n                        {album.acf.cover &&\n                            <img className='cover' src={album.acf.cover} alt={album.title.rendered} />\n                        }\n                        {!album.acf.cover &&\n                            <div className='spacer'></div>\n                        }\n                    </div>\n                    <div className='album-text'>\n                        <div>\n                            Title: {album.title.rendered}\n                        </div>\n                        <div>\n                            {album.acf.artist &&\n                                <p>Artist: {album.acf.artist}</p>\n                            }\n                        </div>\n                        <button className='listen-to-album' onClick={ev => handleReadMore(ev, album.id)}>\n                            Listen to album\n                        </button>\n                        <div className='like-location-container'>\n                        {!!userLib ? \n                                <div>\n                                    {\n                                        checkLikedAlbum(album) &&\n                                        <button className='unlike' onClick={() => unLikeAlbum(album)}>\n                                            Unlike\n                                        </button>\n                                    }\n                                    {\n                                                                    \n                                        !checkLikedAlbum(album) &&\n                                        <button onClick={() => likeAlbum(album)}>\n                                            <img alt='like' className='' src={like} />\n                                        </button>\n                                    }\n\n                                </div>\n                                :<div></div>\n                            }\n                            {album.acf.latitude &&\n                                <div>\n                                    From:\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            ))}\n             <button id='load' onClick={handleLoadMore} >Load More</button>\n        </div>\n    );\n};\n\nexport default UserAlbumList;","import React from 'react';\nimport './homePage.scss';\n\n// component imports\nimport {\n    Header,\n    Footer,\n    HeaderImage,\n    LocationSearchbar,\n\n} from '../components';\n\nconst HomePage = () => {\n    return (\n        <div>\n            <Header/>\n            <HeaderImage/>\n            <LocationSearchbar/>\n            \n            <Footer/>\n        </div>\n    );\n};\n\nexport default HomePage;","import React from 'react';\nimport './searchSongsPage.scss';\n\n// component imports\nimport {\n    Header,\n    Footer,\n    SongList,\n    MusicSearchbar,\n} from '../components';\n\nconst SearchSongsPage = () => {\n    return (\n        <div>\n            <Header/>\n            <MusicSearchbar/>\n            <SongList/>\n            <Footer/>\n        </div>\n    );\n};\n\nexport default SearchSongsPage;","import react from 'react';\nimport './contactPage.scss';\nimport { Header, Footer } from '../components';\n\nconst ContactPage = () => {\n    return(\n        <div className='contact-page-container'>\n            <Header/>\n                <div className='contact-text'>\n                    <h3>\n                        Contact:\n                    </h3>\n                    <p>e-mail: arneverl@student.arteveldehs.be</p>\n                    <p>GSM: 04999999</p>\n                    <p>Telefoon: 02345434</p>\n                </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default ContactPage;","import React from 'react';\n\nimport {Login, Header, Footer} from '../components';\n\nconst LoginPage = () => {\n\n    return (\n        <div>\n            <Header/>\n            <Login/>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default LoginPage;","import React from 'react';\n\nimport {Register, Header, Footer} from '../components';\n\nconst RegisterPage = () => {\n\n    return (\n        <div>\n            <Header/>\n            <Register/>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default RegisterPage;","export default __webpack_public_path__ + \"static/media/upload_white.74f74e45.svg\";","export default __webpack_public_path__ + \"static/media/plus_white.9ef2dfad.svg\";","import React from 'react';\nimport * as Routes from '../../routes';\nimport {Link, useHistory} from 'react-router-dom';\nimport './artistPage.scss';\nimport { Header, Footer, HeaderImage } from '../../components';\n\n\nimport upload from '../../static/icons/upload_white.svg';\nimport plus from '../../static/icons/plus_white.svg';\n\nconst ArtistPage = () => {\n\n    let user = JSON.parse(localStorage.getItem('authUser'));\n    let history = useHistory();\n    if (!user) {\n        history.push(Routes.HOME)\n    }\n\n    return (\n        <div className='artist-page-container'>\n            <Header/>\n            <HeaderImage/>\n                    \n            <div className='artist-page-content'>\n                <Link to={Routes.UPLOAD_SONG}>\n                    <img src={upload} alt='Upload song'/>\n                    <p>Upload song</p>\n                </Link>\n                <Link to={Routes.UPLOAD_ALBUM}>\n                    <img src={upload} alt='Upload album'/>\n                    <p>Upload Album</p>\n                </Link>\n                <Link to={Routes.MAKE_PLAYLIST}>\n                    <img src={plus} alt='Upload playlist'/>\n                    <p>Make Playlist</p>\n                </Link>\n                <Link to={Routes.MAKE_RADIO}>\n                    <img src={plus} alt='Upload radio'/>\n                    <p>Make radio broadcast</p>\n                </Link>\n                <Link to={Routes.EDIT_ARTIST_PROFILE}>\n                    <p className='editartist'>Edit artist profile</p>\n                </Link>\n            </div>\n\n            <Footer/>\n        </div>\n    );\n}\n\nexport default ArtistPage;","import React from 'react';\nimport { Header, Footer, UploadSong } from '../../components';\nimport './uploadSongPage.scss';\nimport * as Routes from '../../routes';\nimport { useHistory} from 'react-router-dom';\n\nconst UploadSongPage = () => {\n    let user = JSON.parse(localStorage.getItem('authUser'));\n    let history = useHistory();\n    if (!user) {\n        history.push(Routes.HOME)\n    }\n    return (\n        <div className='UploadSongPage-container'>\n            <Header/>\n\n            <UploadSong/>\n\n            <Footer/>\n        </div>\n    );\n}\n\nexport default UploadSongPage;","import React from 'react';\nimport { Header, Footer, /*AlbumUpload,*/ AlbumUploadWithRel } from '../../components';\nimport * as Routes from '../../routes';\nimport { useHistory} from 'react-router-dom';\n// import './uploadSongPage.scss';\n\nconst UploadAlbumPage = () => {\n    let user = JSON.parse(localStorage.getItem('authUser'));\n    let history = useHistory();\n    if (!user) {\n        history.push(Routes.HOME)\n    }\n    return (\n        <div className='UploadAlbumPage-container'>\n            <Header/>\n\n            <AlbumUploadWithRel/>\n\n            <Footer/>\n        </div>\n    );\n}\n\nexport default UploadAlbumPage;","import React from 'react';\nimport { Header, Footer, MakePlaylist } from '../../components';\nimport * as Routes from '../../routes';\nimport { useHistory} from 'react-router-dom';\n// import './uploadSongPage.scss';\n\nconst MakePlaylistPage = () => {\n    let user = JSON.parse(localStorage.getItem('authUser'));\n    let history = useHistory();\n    if (!user) {\n        history.push(Routes.HOME)\n    }\n    return (\n        <div className='MakePlaylistPage-container'>\n            <Header/>\n\n            <MakePlaylist/>\n\n            <Footer/>\n        </div>\n    );\n}\n\nexport default MakePlaylistPage;","import React from 'react';\nimport { Header, Footer, AlbumList, MusicSearchbar } from '../../components';\nimport {useHistory} from 'react-router-dom';\nimport * as Routes from '../../routes';\n\nconst AlbumsPage = ({children}) => {\n\n    const history = useHistory();\n\tconst handleEventReadMore = (albumId) => {\n\t\thistory.push(`${Routes.ALBUMS_DETAIL.replace(':id',albumId)}`);\n\t};\n\n    return (\n        <div>\n            <Header/>\n            <MusicSearchbar/>\n            <AlbumList onReadMore={handleEventReadMore}/>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default AlbumsPage;","import { default as React, useEffect, useState, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useApi } from '../../services';\n\nimport { AlbumDetail, Footer, Header, HeaderImage, MusicSearchbar } from '../../components';\n\nconst AlbumDetailPage = ({children}) => {\n\n\treturn (\n\t\t<Fragment>\n            <Header/>\n            <HeaderImage/>\n            <MusicSearchbar/>\n\t\t\t<AlbumDetail/>\n            <Footer/>\n\t\t</Fragment>\n\t);\n};\n\nexport default AlbumDetailPage;","import React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport * as Routes from '../../routes';\nimport { Header, Footer, PlaylistList, MusicSearchbar } from '../../components';\n\nconst PlaylistsPage = ({children}) => {\n\n    const history = useHistory();\n\tconst handleEventReadMore = (playlistId) => {\n\t\thistory.push(`${Routes.PLAYLISTS_DETAIL.replace(':id',playlistId)}`);\n    };\n    \n    return (\n        <div>\n            <Header/>\n            <MusicSearchbar/>\n            <PlaylistList onReadMore={handleEventReadMore} />\n            <Footer/>\n        </div>\n    );\n}\n\nexport default PlaylistsPage;","import React from 'react';\n\nimport { Header, Footer, PlaylistDetail, MusicSearchbar } from '../../components';\n\nconst PlaylistsPage = ({children}) => {\n\n\n    return (\n        <div>\n            <Header/>\n            <MusicSearchbar/>\n            <PlaylistDetail/>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default PlaylistsPage;","import React, { Fragment } from 'react';\nimport {UserAlbumList, Header, Footer} from '../../components';\n\nconst UserAlbumPage = () => {\n    \n    return (\n        <Fragment>\n            <Header/>\n            <UserAlbumList/>\n            <Footer/>\n        </Fragment>\n    )\n}\n\nexport default UserAlbumPage;","import React from 'react';\n\nconst PageLayout = ({children}) => {\n    return (\n        <div className='page'>\n            <main>\n                {children}\n            </main>\n        </div>\n    );\n};\n\nexport default PageLayout;","import React from 'react';\nimport { Route as ReactRoute } from 'react-router';\n\nconst renderMergedProps = (component, layout, routeProps) => {\n    return (layout) ? React.createElement(layout, routeProps, React.createElement(component, routeProps)) : React.createElement(component, routeProps);\n};\n\nconst RouteLayout = ({component, layout, ...rest}) => {\n    return (\n        <ReactRoute {...rest} render={routeProps => {\n            return renderMergedProps(component, layout, routeProps);\n        }} />\n    );\n};\n\nexport default RouteLayout;","import React from 'react';\nimport 'bootstrap';\n// Router import\nimport { BrowserRouter as Router, Redirect, Switch } from 'react-router-dom';\n// scss import\nimport './app.scss';\n// Routes + services\nimport * as Routes from './routes';\n// imports rom pages\nimport {\n    HomePage,\n    SearchSongsPage,\n    ContactPage,\n    LoginPage,\n    ArtistPage,\n    UploadSongPage,\n    AlbumsPage,\n    PlaylistsPage,\n    UploadAlbumPage,\n    AlbumDetailPage,\n    RegisterPage,\n    MakePlaylistPage,\n    PlaylistDetailPage,\n    UserAlbumPage,\n} \nfrom './pages';\n// utilities\nimport { PageLayout } from './layout';\nimport { RouteLayout } from './utilities';\n// services\nimport {ApiProvider} from './services';\nimport {AuthProvider} from './services'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <AuthProvider>\n            <Router>\n                <ApiProvider>\n                    <Switch>\n                        <RouteLayout exact path={Routes.HOME} component={HomePage} layout={PageLayout} />\n\n                        <RouteLayout exact path={Routes.SONGS} component={SearchSongsPage} layout={PageLayout} />\n                        <RouteLayout exact path={Routes.ALBUMS} component={AlbumsPage} layout={PageLayout} />\n                        <RouteLayout exact path={Routes.ALBUMS_DETAIL} component={AlbumDetailPage} layout={PageLayout} />\n\n                        <RouteLayout exact path={Routes.PLAYLISTS} component={PlaylistsPage} layout={PageLayout} />\n                        <RouteLayout exact path={Routes.PLAYLISTS_DETAIL} component={PlaylistDetailPage} layout={PageLayout} />\n\n                        <RouteLayout exact path={Routes.CONTACT} component={ContactPage} layout={PageLayout} />\n\n                        <RouteLayout exact path={Routes.ARTISTS} component={ArtistPage} layout={PageLayout} />\n                        <RouteLayout exact path={Routes.UPLOAD_SONG} component={UploadSongPage} layout={PageLayout} />\n                        <RouteLayout exact path={Routes.UPLOAD_ALBUM} component={UploadAlbumPage} layout={PageLayout} />\n                        <RouteLayout exact path={Routes.MAKE_PLAYLIST} component={MakePlaylistPage} layout={PageLayout} />\n\n                        <RouteLayout exact path={Routes.USER_ALBUM} component={UserAlbumPage} layout={PageLayout} />\n\n                        <RouteLayout exact path={Routes.LOGIN} component={LoginPage} layout={PageLayout} />\n                        <RouteLayout exact path={Routes.REGISTER} component={RegisterPage} layout={PageLayout} />\n                    </Switch>\n                </ApiProvider>\n            </Router>\n        </AuthProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}